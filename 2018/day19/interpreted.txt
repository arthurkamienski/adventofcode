00 addi 1 16 1 -> to 23
01 seti 1 4  2 -> r2 = 1 to 2
02 seti 1 0  3 -> r3 = 1 to 4
04 eqrr 4 5  4 -> r4 = (r2 * r3) == r5, to 5
05 addr 4 1  1 -> if(r4 == r5) to 7 else to 8
07 addr 2 0  0 -> r0 = r0 + r2, to 8
08 addi 3 1  3 -> r3 = r3 + 1, to 9
09 gtrr 3 5  4 -> r4 = r3 > r5, to 10
10 addr 1 4  1 -> if r3 > r5 to 12 else to 11
11 seti 2 4  1 -> to 3
12 addi 2 1  2 -> r2 = r2 + 1 to 13
13 gtrr 2 5  4 -> r4 = r2 > r5 to 14
14 addr 4 1  1 -> if r2>r5 to 16 else to 2
16 mulr 1 1  1 -> EXIT
23 addi 4 16 4 -> r4 = ((r4 + 2) * 22) + 16, to 24
24 addr 5 4  5 -> r5 = ((r5 + 2)^2 * 19 * 11) + r4, to 25
25 addr 1 0  1 -> to 26 + r0
26 seti 0 7  1 -> to 1
27 setr 1 5  4 -> r4 = 27, to 28
28 mulr 4 1  4 -> r4 = r4 * 28, to 29
29 addr 1 4  4 -> r4 = 29 + r4, to 30
30 mulr 1 4  4 -> r4 = 30 * r4, to 31
31 muli 4 14 4 -> r4 = r4 * 14, to 32
32 mulr 4 1  4 -> r4 = r4 * 32, to 33
33 addr 5 4  5 -> r5 = r4 + r5, to 34
34 seti 0 9  0 -> r0 = 0, to 35
35 seti 0 4  1 -> to 1